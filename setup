#!/usr/bin/python

"""
Setup file for the clustering experiment.
"""

from optparse import OptionParser
from os import mkdir
from os import system
from os.path import abspath
from os.path import exists
from os.path import join
from shutil import copyfile
from shutil import copytree
from sys import argv
from sys import path

if __name__ == '__main__':
    """
    parser = OptionParser()
    parser.add_options('-d', '--directory', dest = 'directory',
                       help = 'webserver directory')

    (options, args) = parser.parse_args()

    webserver_directory = options.directory

    try:
        mkdir(webserver_directory)
    except Exception as e:
        print str(e)

    copyfile('server/server.py', webserver_directory)
    copyfile('server/static', webserver_directory)
    """

    try:
        mkdir('data')
    except:
        print 'data directory already created'

    # download http://www.eecs.berkeley.edu/~darrenk/all.txt

    if not exists(join('data', 'data.serialize')):
        f = open(join('data', 'data.serialize'), 'w')
        f.write(str({}))
        f.close()

    try:
        mkdir(join('server', join('static', 'data')))
    except Exception:
        print 'static data directory already created'
        
    for d in ['scluster', 'vcluster', 'lda_tfidf', 'vcluster_tfidf', 'lda_word_count']:
        try:
            mkdir(join('server', join('static', join('data', d))))
        except Exception:
            print 'data directory: %s probably already created' % (d)

    cmd_folder = abspath('server')
    if cmd_folder not in path:
        path.insert(0, cmd_folder)

    from server import *

    argv.append('1337')
    argv.append('/server/static')
    run('server')
    #system('python %s 1337' % (join('server', 'server.py')))
